================================================================================
                           DESIGN LUKA - 사용자 매뉴얼
================================================================================

📋 목차
1. 프로젝트 개요
2. 기술 스택
3. 프로젝트 구조
4. 주요 기능
5. 페이지별 상세 설명
6. 관리자 기능
7. 설치 및 실행 방법
8. 배포 방법
9. 개발 가이드
10. 문제 해결

================================================================================
1. 프로젝트 개요
================================================================================

Design Luka는 인테리어 디자인 회사의 포트폴리오 및 비즈니스 웹사이트입니다.

주요 특징:
- 반응형 웹 디자인 (모바일/태블릿/데스크톱)
- 포트폴리오 갤러리 및 상세 보기
- 관리자 대시보드
- Firebase 연동
- Cloudinary 이미지 관리
- Google Sheets 연동

================================================================================
2. 기술 스택
================================================================================

Frontend:
- React 18
- React Router DOM
- Framer Motion (애니메이션)
- Tailwind CSS (스타일링)
- Heroicons (아이콘)

Backend & Database:
- Firebase Realtime Database
- Firebase Authentication

이미지 관리:
- Cloudinary

배포:
- GitHub Pages

개발 도구:
- Create React App
- ESLint
- PostCSS

================================================================================
3. 프로젝트 구조
================================================================================

designluka/
├── public/                    # 정적 파일
│   ├── index.html
│   ├── favicon.ico
│   ├── manifest.json
│   └── CNAME
├── src/
│   ├── components/           # 재사용 가능한 컴포넌트
│   │   ├── Navbar.jsx       # 네비게이션 바
│   │   ├── Footer.jsx       # 푸터
│   │   ├── Hero.jsx         # 히어로 섹션
│   │   ├── BeforeAfter.jsx  # Before/After 컴포넌트
│   │   ├── CaseStudies.jsx  # 케이스 스터디
│   │   ├── DesignerProfiles.jsx # 디자이너 프로필
│   │   ├── FloatingCTA.jsx  # 플로팅 CTA 버튼
│   │   ├── ImageGallery.jsx # 이미지 갤러리
│   │   ├── InteractiveFeatures.jsx # 인터랙티브 기능
│   │   ├── ProcessTimeline.jsx # 프로세스 타임라인
│   │   ├── ScrollToTop.jsx  # 스크롤 투 탑
│   │   ├── SpaceCategories.jsx # 공간 카테고리
│   │   └── SurveyForm.jsx   # 설문 폼
│   ├── pages/               # 페이지 컴포넌트
│   │   ├── HomePage.jsx     # 홈페이지
│   │   ├── AboutPage.jsx    # 회사 소개
│   │   ├── PortfolioPage.jsx # 포트폴리오
│   │   ├── PortfolioDetailPage.jsx # 포트폴리오 상세
│   │   ├── BusinessPage.jsx # 비즈니스 페이지
│   │   ├── ContactPage.jsx  # 문의 페이지
│   │   ├── ProcessPage.jsx  # 프로세스 페이지
│   │   ├── InsightPage.jsx  # 인사이트 페이지
│   │   ├── InsightDetailPage.jsx # 인사이트 상세
│   │   ├── InsightDetailModal.jsx # 인사이트 모달
│   │   └── admin/           # 관리자 페이지
│   │       ├── AdminDashboard.jsx # 관리자 대시보드
│   │       ├── AdminLoginPage.jsx # 관리자 로그인
│   │       ├── PortfolioManagement.jsx # 포트폴리오 관리
│   │       ├── InsightManagement.jsx # 인사이트 관리
│   │       └── InsightEditor.jsx # 인사이트 편집기
│   ├── contexts/            # React Context
│   │   └── AuthContext.jsx  # 인증 컨텍스트
│   ├── firebase/            # Firebase 설정
│   │   └── config.js        # Firebase 설정
│   ├── utils/               # 유틸리티 함수
│   │   ├── googleSheetsApi.js # Google Sheets API
│   │   ├── testData.js      # 테스트 데이터
│   │   └── updateExistingInsights.js # 인사이트 업데이트
│   ├── images/              # 이미지 리소스
│   │   ├── aboutluka/       # 회사 소개 이미지
│   │   ├── btn/             # 버튼 이미지
│   │   ├── logo/            # 로고
│   │   ├── main/            # 메인 이미지
│   │   └── portfolio/       # 포트폴리오 이미지
│   ├── App.jsx              # 메인 앱 컴포넌트
│   ├── index.js             # 앱 진입점
│   └── index.css            # 글로벌 스타일
├── package.json             # 프로젝트 의존성
├── tailwind.config.js       # Tailwind CSS 설정
└── README.md                # 프로젝트 설명

================================================================================
4. 주요 기능
================================================================================

4.1 사용자 기능
- 반응형 웹 디자인
- 포트폴리오 갤러리 (주거/상업 공간)
- 이미지 모달 및 갤러리 뷰
- 필터링 시스템
- 문의 폼
- 회사 소개 및 프로세스
- 인사이트 블로그

4.2 관리자 기능
- Firebase 인증 기반 로그인
- 포트폴리오 프로젝트 관리 (추가/수정/삭제)
- 이미지 업로드 (Cloudinary)
- 인사이트 글 관리
- Google Sheets 연동 (문의/리드 관리)
- Cloudinary 사용량 모니터링

4.3 기술적 특징
- 이미지 최적화 및 lazy loading
- 무한 스크롤 및 페이지네이션
- 애니메이션 및 전환 효과
- SEO 최적화
- 모바일 터치 최적화

================================================================================
5. 페이지별 상세 설명
================================================================================

5.1 홈페이지 (HomePage.jsx)
기능:
- 히어로 섹션 (이미지 슬라이더)
- 회사 소개 요약
- 포트폴리오 미리보기
- 서비스 카테고리
- 문의 CTA

특징:
- 자동 이미지 슬라이더
- 터치 스와이프 지원
- 반응형 레이아웃
- 애니메이션 효과

5.2 포트폴리오 페이지 (PortfolioPage.jsx)
기능:
- 주거/상업 공간 분류
- 필터링 시스템
- Masonry 레이아웃
- 상세 프로젝트 보기
- 이미지 갤러리 모달

특징:
- CSS Grid 기반 Masonry 레이아웃
- 이미지 lazy loading
- 터치 친화적 네비게이션
- 반응형 필터 (가로 스크롤)

5.3 관리자 대시보드 (AdminDashboard.jsx)
기능:
- Cloudinary 사용량 모니터링
- 포트폴리오 관리 링크
- 인사이트 관리 링크
- Google Sheets Q&A 결과 링크
- 관리자 연락처

특징:
- 실시간 사용량 표시
- 직관적인 카드 레이아웃
- 반응형 디자인

5.4 포트폴리오 관리 (PortfolioManagement.jsx)
기능:
- 프로젝트 추가/수정/삭제
- 이미지 업로드 (Cloudinary)
- 텍스트 편집
- 실시간 미리보기

특징:
- 드래그 앤 드롭 이미지 업로드
- 실시간 편집 모드
- 이미지 최적화

================================================================================
6. 관리자 기능
================================================================================

6.1 로그인
- URL: /admin/login
- Firebase Authentication 사용
- 관리자 전용 접근

6.2 포트폴리오 관리
- 프로젝트 추가: 제목, 위치, 면적, 스타일, 이미지
- 프로젝트 수정: 텍스트 및 이미지 편집
- 프로젝트 삭제: 확인 후 삭제
- 이미지 관리: Cloudinary 연동

6.3 인사이트 관리
- 글 작성/편집/삭제
- 마크다운 지원
- 카테고리 분류
- 이미지 첨부

6.4 데이터 모니터링
- Cloudinary 사용량 (저장공간, 대역폭, 크레딧)
- Google Sheets 연동 상태
- 실시간 업데이트

================================================================================
7. 설치 및 실행 방법
================================================================================

7.1 필수 요구사항
- Node.js 16+ 
- npm 또는 yarn
- Git

7.2 설치 과정
```bash
# 저장소 클론
git clone https://github.com/wonyoung-R/design_luka.git
cd designluka

# 의존성 설치
npm install

# 환경 변수 설정
# .env 파일 생성 후 Firebase 설정 추가
```

7.3 환경 변수 설정
```env
REACT_APP_FIREBASE_API_KEY=your_firebase_api_key
REACT_APP_FIREBASE_AUTH_DOMAIN=your_firebase_auth_domain
REACT_APP_FIREBASE_PROJECT_ID=your_firebase_project_id
REACT_APP_FIREBASE_STORAGE_BUCKET=your_firebase_storage_bucket
REACT_APP_FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id
REACT_APP_FIREBASE_APP_ID=your_firebase_app_id
REACT_APP_FIREBASE_DATABASE_URL=your_firebase_database_url

REACT_APP_CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
REACT_APP_CLOUDINARY_UPLOAD_PRESET=your_cloudinary_upload_preset
```

7.4 실행
```bash
# 개발 서버 실행
npm start

# 프로덕션 빌드
npm run build

# 배포
npm run deploy
```

================================================================================
8. 배포 방법
================================================================================

8.1 GitHub Pages 배포
```bash
# 빌드 및 배포
npm run deploy

# 또는 수동 배포
npm run build
gh-pages -d build
```

8.2 배포 설정
- GitHub 저장소 설정에서 Pages 활성화
- gh-pages 브랜치를 소스로 설정
- CNAME 파일로 커스텀 도메인 설정

8.3 배포 후 확인사항
- 모든 페이지 정상 로드 확인
- 이미지 및 리소스 로드 확인
- 관리자 기능 정상 작동 확인
- 모바일 반응형 확인

================================================================================
9. 개발 가이드
================================================================================

9.1 코드 스타일
- ESLint 규칙 준수
- Prettier 포맷팅 사용
- 컴포넌트별 파일 분리
- 의미있는 변수명 사용

9.2 컴포넌트 구조
```jsx
// 컴포넌트 템플릿
import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';

const ComponentName = ({ props }) => {
  // State 정의
  const [state, setState] = useState(initialValue);
  
  // Effect 정의
  useEffect(() => {
    // 로직
  }, [dependencies]);
  
  // 이벤트 핸들러
  const handleEvent = () => {
    // 로직
  };
  
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="component-class"
    >
      {/* JSX 내용 */}
    </motion.div>
  );
};

export default ComponentName;
```

9.3 스타일링 가이드
- Tailwind CSS 클래스 사용
- 반응형 디자인 적용
- 일관된 색상 팔레트 사용
- 접근성 고려

9.4 상태 관리
- 로컬 상태: useState
- 전역 상태: Context API
- 서버 상태: Firebase Realtime Database

================================================================================
10. 문제 해결
================================================================================

10.1 일반적인 문제

문제: 이미지 로딩 실패
해결: 
- Cloudinary 설정 확인
- 이미지 URL 유효성 검사
- 네트워크 연결 확인

문제: Firebase 연결 실패
해결:
- 환경 변수 설정 확인
- Firebase 프로젝트 설정 확인
- 인증 정보 확인

문제: 모바일에서 레이아웃 깨짐
해결:
- 반응형 CSS 클래스 확인
- 뷰포트 메타 태그 확인
- 터치 이벤트 처리 확인

10.2 성능 최적화
- 이미지 lazy loading 적용
- 컴포넌트 메모이제이션
- 불필요한 리렌더링 방지
- 번들 크기 최적화

10.3 보안 고려사항
- Firebase 보안 규칙 설정
- 환경 변수 보호
- 입력 데이터 검증
- XSS 방지

================================================================================
11. 업데이트 및 유지보수
================================================================================

11.1 정기 업데이트
- 의존성 패키지 업데이트
- 보안 패치 적용
- 성능 모니터링
- 사용자 피드백 반영

11.2 백업 및 복구
- Firebase 데이터 백업
- 코드 버전 관리
- 환경 설정 백업
- 복구 절차 문서화

11.3 모니터링
- 에러 로깅
- 성능 메트릭
- 사용자 행동 분석
- 서버 상태 모니터링

================================================================================
12. 연락처 및 지원
================================================================================

개발자: Wonyoung Ryu
이메일: grizrider@Wonyoungui-MacBookAir.local
GitHub: https://github.com/wonyoung-R/design_luka

기술 지원:
- GitHub Issues 사용
- 문서 업데이트
- 코드 리뷰
- 성능 최적화

================================================================================
                                끝
================================================================================

이 매뉴얼은 Design Luka 프로젝트의 전체적인 구조와 기능을 설명합니다.
추가 질문이나 개선사항이 있으시면 언제든 연락주세요. 